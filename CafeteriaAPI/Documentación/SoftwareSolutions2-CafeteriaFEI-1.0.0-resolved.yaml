---
swagger: "2.0"
info:
  description: Especificación del API CafeteriaUV
  version: 1.0.0
  title: CafeteriaUV
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /SoftwareSolutions2/CafeteriaFEI/1.0.0
tags:
- name: cafeteria
  description: Información y solicitudes de la cuenta cafeteria
- name: personalCafeteria
  description: Información y solicitudes de la cuenta personalCafeteria
- name: consumidor
  description: Información y solicitudes de la cuenta consumidor
- name: producto
  description: Información y solicitudes de la cuenta producto
- name: reseñaCafeteria
  description: Información y solicitudes de la cuenta reseñaCafeteria
- name: reseñaProducto
  description: Información y solicitudes de la cuenta reseñaProducto
- name: administrador
  description: Información y solicitudes de la cuenta administrador
schemes:
- https
- http
paths:
  /cafeterias:
    get:
      tags:
      - cafeteria
      summary: Obtener las cafeterías registradas
      operationId: obtenerCafeterias
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Solicitud exitosa de recuperación de cafeterías
          schema:
            type: array
            items:
              $ref: '#/definitions/Cafeteria'
    post:
      tags:
      - cafeteria
      summary: Registrar una nueva cafetería
      operationId: registrarCafeteria
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Objeto de la cafetería creado
        required: true
        schema:
          $ref: '#/definitions/Cafeteria'
      responses:
        "201":
          description: Se creó la nueva cafetería con éxito
        "400":
          description: No se pudo crear la cafetería
  /cafeterias/{idCafeteria}:
    get:
      tags:
      - cafeteria
      summary: Obtener una cafetería por su id
      operationId: obtenerCafeteria
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería a obtener
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de cafetería por id
          schema:
            type: array
            items:
              $ref: '#/definitions/Cafeteria'
        "404":
          description: Solicitud no exitosa de recuperación, no existe cafetería con el id proporcionado
  /cafeterias/facultad/{facultadPerteneciente}:
    get:
      tags:
      - cafeteria
      summary: Obtener las cafeterías de una facultad
      operationId: ObtenerCafeteriasFacultad
      produces:
      - application/json
      parameters:
      - name: facultadPerteneciente
        in: path
        description: Facultad a la que pertenecen las cafeterías a obtener
        required: true
        type: string
      responses:
        "200":
          description: Solicitud exitosa de recuperación de cafeterias por facultad
          schema:
            type: array
            items:
              $ref: '#/definitions/Cafeteria'
  /personalCafeteria/{idCafeteria}:
    get:
      tags:
      - personalCafeteria
      summary: Obtener el personal de una cafetería
      operationId: ObtenerPersonalCafeteria
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería a obtener
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de cafetería por id
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonalCafeteria'
    post:
      tags:
      - personalCafeteria
      summary: Registrar un nuevo personal de cafetería
      operationId: RegistrarPersonalCafeteria
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería a la que se le agregará el personal
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto creado del personal a registrar
        required: true
        schema:
          $ref: '#/definitions/PersonalCafeteria'
      responses:
        "201":
          description: Se creó el nuevo personal de cafetería con éxito
        "400":
          description: No se pudo crear el personal de cafetería
  /personalCafeteria/login/{correoElectronico}:
    post:
      tags:
      - personalCafeteria
      summary: Verificar credencial del personal de cafetería
      operationId: loginPersonal
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: correoElectronico
        in: path
        description: Correo electrónico del personal a verificar
        required: true
        type: string
      responses:
        "200":
          description: La credencial del personal es correcta
        "404":
          description: Credencial incorrecta
  /personalCafeteria/idPersonal/{idPersonal}:
    get:
      tags:
      - personalCafeteria
      summary: Obtener personal de cafetería por su id
      operationId: ObtenerPersonalPorId
      produces:
      - application/json
      parameters:
      - name: idPersonal
        in: path
        description: ID del personal a obtener
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de personal por id
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonalCafeteria'
        "404":
          description: Solicitud no exitosa de recuperación, no existe personal con el id proporcionado
    put:
      tags:
      - personalCafeteria
      summary: Modificar un personal de cafetería
      operationId: ModificarPersonalCafeteria
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idPersonal
        in: path
        description: ID del personal a modificiar
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto modificado del personal
        required: true
        schema:
          $ref: '#/definitions/PersonalCafeteria'
      responses:
        "200":
          description: Se modificó el personal de cafetería con éxito
        "400":
          description: No se pudo modificar el personal de cafetería
        "404":
          description: No se encontró el personal con el id proporcionado
    delete:
      tags:
      - personalCafeteria
      summary: Eliminar un personal de cafetería
      operationId: EliminarPersonalCafeteria
      produces:
      - application/json
      parameters:
      - name: idPersonal
        in: path
        description: ID del personal a eliminar
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Se eliminó el personal de cafetería con éxito
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonalCafeteria'
        "404":
          description: No se pudo eliminar, no se econtró el personal con el id proporcionado
  /consumidores:
    post:
      tags:
      - consumidor
      summary: Registrar un nuevo consumidor al sistema
      operationId: registrarConsumidor
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Objeto del consumidor creado
        required: true
        schema:
          $ref: '#/definitions/Consumidor'
      responses:
        "201":
          description: Se creó el nuevo consumidor con éxito
        "400":
          description: No se pudo crear el consumidor
  /consumidor/login/{correoElectronico}:
    post:
      tags:
      - consumidor
      summary: Verificar credencial del consumidor
      operationId: loginConsumidor
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: correoElectronico
        in: path
        description: Correo electrónico del consumidor a verificar
        required: true
        type: string
      responses:
        "200":
          description: La credencial del consumidor es correcta
        "404":
          description: Credencial incorrecta
  /consumidor/idConsumidor/{idConsumidor}:
    get:
      tags:
      - consumidor
      summary: Obtener el consumidor por su id
      operationId: ObtenerConsumidorPorId
      produces:
      - application/json
      parameters:
      - name: idConsumidor
        in: path
        description: ID del consumidor a obtener
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de consumidor por id
          schema:
            type: array
            items:
              $ref: '#/definitions/Consumidor'
        "404":
          description: Solicitud no exitosa de recuperación, no existe consumidor con el id proporcionado
    put:
      tags:
      - consumidor
      summary: Modificar un consumidor
      operationId: ModificarConsumidor
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idConsumidor
        in: path
        description: ID del consumidor a modificiar
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto modificado del consumidor
        required: true
        schema:
          $ref: '#/definitions/Consumidor'
      responses:
        "200":
          description: Se modificó el consumidor con éxito
        "400":
          description: No se pudo modificar el consumidor
        "404":
          description: No se encontró el consumidor con el id proporcionado
  /productos/{idCafeteria}:
    get:
      tags:
      - producto
      summary: Obtener los productos de una cafetería
      operationId: obtenerProductosCafeteria
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería de la cual se obtendrán los productos
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de productos por id de cafetería
          schema:
            type: array
            items:
              $ref: '#/definitions/Producto'
    post:
      tags:
      - producto
      summary: Registrar un nuevo producto de cafetería
      operationId: RegistrarProductoCafeteria
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería a la que se agregará el producto
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto creado del producto a registrar
        required: true
        schema:
          $ref: '#/definitions/Producto'
      responses:
        "201":
          description: Se creó el nuevo producto de cafetería con éxito
        "400":
          description: No se pudo crear el producto de cafetería
  /productos/idProducto/{idProducto}:
    get:
      tags:
      - producto
      summary: Obtener un producto de cafetería por su id
      operationId: ObtenerProductoPorId
      produces:
      - application/json
      parameters:
      - name: idProducto
        in: path
        description: ID del producto a obtener
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de producto por su id
          schema:
            type: array
            items:
              $ref: '#/definitions/Producto'
    put:
      tags:
      - producto
      summary: Modificar un producto de cafetería
      operationId: ModificarProducto
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idProducto
        in: path
        description: ID del producto a modificar
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto creado del producto a modificar
        required: true
        schema:
          $ref: '#/definitions/Producto'
      responses:
        "201":
          description: Se creó el nuevo producto de cafetería con éxito
        "400":
          description: No se pudo crear el producto de cafetería
        "404":
          description: No se encontró el producto con el id proporcionado
    delete:
      tags:
      - producto
      summary: Eliminar un producto de cafetería
      operationId: EliminarProducto
      produces:
      - application/json
      parameters:
      - name: idProducto
        in: path
        description: ID del producto a eliminar
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Se eliminó el producto de cafetería con éxito
          schema:
            type: array
            items:
              $ref: '#/definitions/Producto'
        "404":
          description: No se pudo eliminar, no se econtró el producto con el id proporcionado
  /reseñasCafeteria/{idCafeteria}:
    get:
      tags:
      - reseñaCafeteria
      summary: Obtener las reseñas de una cafetería
      operationId: ObtenerReseñasCafeteria
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería de la cual se obtendrán las reseñas
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de reseñas por id de cafetería
          schema:
            type: array
            items:
              $ref: '#/definitions/ReseniaCafeteria'
    post:
      tags:
      - reseñaCafeteria
      summary: Registrar una nueva reseña de cafetería
      operationId: RegistrarReseñaCafeteria
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idCafeteria
        in: path
        description: ID de la cafetería a la que se agregará la reseña
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto creado de la reseña a registrar
        required: true
        schema:
          $ref: '#/definitions/ReseniaCafeteria'
      responses:
        "201":
          description: Se creó la nueva reseña de cafetería con éxito
        "400":
          description: No se pudo crear la reseña de cafetería
  /reseñasProducto/{idProducto}:
    get:
      tags:
      - reseñaProducto
      summary: Obtener las reseñas de un producto de cafetería
      operationId: ObtenerReseñasProducto
      produces:
      - application/json
      parameters:
      - name: idProducto
        in: path
        description: ID del producto del cual se obtendrán las reseñas
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Solicitud exitosa de recuperación de reseñas de producto
          schema:
            type: array
            items:
              $ref: '#/definitions/ReseniaProducto'
    post:
      tags:
      - reseñaProducto
      summary: Registrar una nueva reseña de producto
      operationId: RegistrarReseñaProducto
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: idProducto
        in: path
        description: ID del producto al que se agregará la reseña
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Objeto creado de la reseña a registrar
        required: true
        schema:
          $ref: '#/definitions/ReseniaProducto'
      responses:
        "201":
          description: Se creó la nueva reseña de producto con éxito
        "400":
          description: No se pudo crear la reseña de producto
  /administradores:
    post:
      tags:
      - administrador
      summary: Registrar un nuevo administrador del sistema
      operationId: registrarAdministrador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Objeto del administrador creado
        required: true
        schema:
          $ref: '#/definitions/Administrador'
      responses:
        "201":
          description: Se creó el nuevo administrador con éxito
        "400":
          description: No se pudo crear el administrador
  /administradores/{correoElectronico}:
    post:
      tags:
      - administrador
      summary: Verificar credencial del administrador
      operationId: loginAdministrador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: correoElectronico
        in: path
        description: Correo electrónico del administrador a verificar
        required: true
        type: string
      responses:
        "200":
          description: La credencial del administrador es correcta
        "404":
          description: Credencial incorrecta
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Cafeteria:
    type: object
    required:
    - activo
    - direccion
    - horaFin
    - horaInicio
    - nombreCafeteria
    properties:
      id:
        type: integer
        format: int64
      nombreCafeteria:
        type: string
        example: La cafe
      direccion:
        type: string
        example: Av. Xalapa, Obrero campesino
      horaInicio:
        type: string
        example: "480"
      horaFin:
        type: string
        example: "1080"
      activo:
        type: boolean
  PersonalCafeteria:
    type: object
    required:
    - CURP
    - cargo
    - contrasenia
    - correoElectronico
    - idCafeteria
    - nombre
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string
        example: David Alexander Mijangos Paredes
      CURP:
        type: string
        example: MIPD011008HOCJRVA4
      correoElectronico:
        type: string
        example: david@gmail.com
      cargo:
        type: string
        example: Responsable
      idCafeteria:
        type: integer
        format: int64
      contrasenia:
        type: string
        example: david1234
  Producto:
    type: object
    required:
    - idCafeteria
    - nombre
    - precio
    - rutaImagen
    - tiempoAproximado
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string
        example: Chilaquiles rojos
      precio:
        type: integer
        format: int64
      tiempoAproximado:
        type: integer
        format: int64
      rutaImagen:
        type: string
        example: img/chilaquiles.png
      idCafeteria:
        type: integer
        format: int64
  ReseniaCafeteria:
    type: object
    required:
    - calificacion
    - idCafeteria
    - opinion
    - rutaImagen
    - titulo
    properties:
      id:
        type: integer
        format: int64
      titulo:
        type: string
        example: Buena cafetería
      opinion:
        type: string
        example: La comida es muy rica
      calificacion:
        type: integer
        format: int64
      rutaImagen:
        type: string
        example: img/buenaCafe.png
      idCafeteria:
        type: integer
        format: int64
  ReseniaProducto:
    type: object
    required:
    - calificacion
    - idProducto
    - opinion
    - rutaImagen
    - titulo
    properties:
      id:
        type: integer
        format: int64
      titulo:
        type: string
        example: Ricos chilaquiles
      opinion:
        type: string
        example: Los chilaquiles son muy ricos y baratos
      calificacion:
        type: integer
        format: int64
      rutaImagen:
        type: string
        example: img/buenChilaquil.png
      idProducto:
        type: integer
        format: int64
  Consumidor:
    type: object
    required:
    - contrasenia
    - correoElectronico
    - nombre
    properties:
      id:
        type: integer
        format: int64
      nombre:
        type: string
        example: Eder Ivan Negrete García
      correoElectronico:
        type: string
        example: eder@gmail.com
      contrasenia:
        type: string
        example: Eder1234
  Administrador:
    type: object
    required:
    - contrasenia
    - correoElectronico
    properties:
      id:
        type: integer
        format: int64
      correoElectronico:
        type: string
        example: administrador@gmail.com
      contrasenia:
        type: string
        example: Admin1234
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
